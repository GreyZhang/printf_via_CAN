* printf via CAN
** summary
- When we design an embedded system we usally use a printf function via UART. 
Yet, it is difficult to use that function on an automobile ECU because 
most ECU do not have UART design. Instead, they have CAN! It is really a pity 
to give up so many tools which are popular on many fields, so we need some 
function to covert CAN messages into UART. Of course this would need some
hardware. But the good news is that we can choose so many open source hardware
such as arduino.

** hardware
- Here I use arduino UNO with a MCP2515 CAN chip extended with SPI on it. This is convenient because we just need an USB cube and no other power supply wire is needed.

** arduino software
*** version 1, use one byte of the CAN message data field.
- Appication note: [[https://blog.csdn.net/grey_csdn/article/details/107732595][printf via CAN with arduino version 1]]
- my code: arduino_version_01
- related project: [[https://github.com/pierremolinaro/acan2515][ACAN2515]]

*** version 2, take full use of CAN message data field.
- Appication note: [[https://blog.csdn.net/grey_csdn/article/details/108329194][printf via CAN with arduino version 2]]
- my code: arduino_version_02

*** version 3, add CAN baud rate adaption.
- Appication note: [[https://blog.csdn.net/grey_csdn/article/details/108329213][printf via CAN with arduino which supports CAN baud rate]]
- my code: arduino_version_03
- UART comands: 250\n, 500\n, 1000\n to set CAN baud rate to 250kps, 500kps and 1000kps.

** embeded software on debug target
*** How to use.
1. Add all the code to your project.
2. Replace can_inf_can_tx with your own design.
3. Call can_lld_printf_init function when is system initialized.
4. Call debug_lld_can_queue_pop periodically such as 10ms.
5. Compile and link.
- There is an example to use it, check Example01 for detials.

*** use one byte of CAN data field
- code: can_com_stack_01

*** take full use of CAN data field.
- To port printf function we just need to design our own putc function. It is still right for our design. So how to take full use of CAN message data feild? The answer is the pop function in our code. We can make the compress work during pop action.
- code: can_com_stack_02
